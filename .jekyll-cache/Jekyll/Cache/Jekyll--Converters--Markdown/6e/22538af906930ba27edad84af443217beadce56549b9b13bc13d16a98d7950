I"∏<p>Newer Linux distributions are trending towards using <code>systemd</code> for managing daemons. Typically, systems based on Fedora, ArchLinux, or Debian (8 or later) use <code>systemd</code>. This includes Ubuntu releases including and after 15.04, CentOS, and Red Hat. If you are unsure if your system is using <code>systemd</code>, you may check with the following command:</p>
<figure class="highlight"><pre><code class="language-bash" data-lang="bash">$ ps -p 1 -o comm=</code></pre></figure>
<p>If the preceding command returns the string <code>systemd</code>, continue with the instructions below.</p>
<p>A service file is needed to control Open Peer Power with <code>systemd</code>. The template below should be created using a text editor. Note, root permissions via <code>sudo</code> will likely be needed. The following should be noted to modify the template:</p>
<ul>
<li><code>ExecStart</code> contains the path to <code>hass</code> and this may vary. Check with <code>whereis hass</code> for the location.</li>
<li>For most systems, the file is <code>/etc/systemd/system/open-peer-power@YOUR_USER.service</code> with YOUR_USER replaced by the user account that Open Peer Power will run as (normally <code>openpeerpower</code>).  In particular, this is the case for Ubuntu 16.04.</li>
<li>If unfamiliar with command-line text editors, <code>sudo nano -w [filename]</code> can be used with <code>[filename]</code> replaced with the full path to the file.  Ex. <code>sudo nano -w /etc/systemd/system/open-peer-power@YOUR_USER.service</code>.  After text entered, press CTRL-X then press Y to save and exit.</li>
<li>If you‚Äôre running Open Peer Power in a Python virtual environment or a Docker container, please skip to the appropriate template listed below.</li>
</ul>
<figure class="highlight"><pre><code class="language-text" data-lang="text">[Unit]
Description= Open Peer Power
After=network-online.target
<p>[Service]
Type=simple
User=%i
ExecStart=/usr/bin/hass</p>
<p>[Install]
WantedBy=multi-user.target</code></pre></figure></p>
<h3>Python virtual environment</h3>
<p>If you‚Äôve setup Open Peer Power in <code>virtualenv</code> following our <a href="/getting-started/installation-virtualenv/">Python installation guide</a> or <a href="/getting-started/installation-raspberry-pi/">manual installation guide for Raspberry Pi</a>, the following template should work for you. If Open Peer Power install is not located at <code>/srv/openpeerpower</code>, please modify the <code>ExecStart=</code> line appropriately. <code>YOUR_USER</code> should be replaced by the user account that Open Peer Power will run as (e.g <code>openpeerpower</code>).</p>
<figure class="highlight"><pre><code class="language-text" data-lang="text">[Unit]
Description= Open Peer Power
After=network-online.target
<p>[Service]
Type=simple
User=%i
ExecStart=/srv/openpeerpower/bin/hass -c &quot;/home/%i/.openpeerpower&quot;</p>
<p>[Install]
WantedBy=multi-user.target</code></pre></figure></p>
<h3>Docker</h3>
<p>If you want to use Docker, the following template should work for you.</p>
<figure class="highlight"><pre><code class="language-text" data-lang="text">[Unit]
Description= Open Peer Power
Requires=docker.service
After=docker.service
<p>[Service]
Restart=always
RestartSec=3
ExecStart=/usr/bin/docker run ‚Äìname=open-peer-power-%i -v /home/%i/.openpeerpower/:/config -v /etc/localtime:/etc/localtime:ro ‚Äìnet=host openpeerpower/open-peer-power
ExecStop=/usr/bin/docker stop -t 2 open-peer-power-%i
ExecStopPost=/usr/bin/docker rm -f open-peer-power-%i</p>
<p>[Install]
WantedBy=multi-user.target</code></pre></figure></p>
<h3>Next Steps</h3>
<p>You need to reload <code>systemd</code> to make the daemon aware of the new configuration.</p>
<figure class="highlight"><pre><code class="language-bash" data-lang="bash">sudo systemctl --system daemon-reload</code></pre></figure>
<p>To have Open Peer Power start automatically at boot, enable the service.</p>
<figure class="highlight"><pre><code class="language-bash" data-lang="bash">sudo systemctl enable open-peer-power@YOUR_USER</code></pre></figure>
<p>To disable the automatic start, use this command.</p>
<figure class="highlight"><pre><code class="language-bash" data-lang="bash">sudo systemctl disable open-peer-power@YOUR_USER</code></pre></figure>
<p>To start Open Peer Power now, use this command.</p>
<figure class="highlight"><pre><code class="language-bash" data-lang="bash">sudo systemctl start open-peer-power@YOUR_USER</code></pre></figure>
<p>You can also substitute the <code>start</code> above with <code>stop</code> to stop Open Peer Power, <code>restart</code> to restart Open Peer Power, and ‚Äòstatus‚Äô to see a brief status report as seen below.</p>
<figure class="highlight"><pre><code class="language-bash" data-lang="bash">$ sudo systemctl status open-peer-power@YOUR_USER
‚óè open-peer-power@fab.service - Open Peer Power for YOUR_USER
   Loaded: loaded (/etc/systemd/system/open-peer-power@YOUR_USER.service; enabled; vendor preset: disabled)
   Active: active (running) since Sat 2016-03-26 12:26:06 CET; 13min ago
 Main PID: 30422 (hass)
   CGroup: /system.slice/system-home\x2dassistant.slice/open-peer-power@YOUR_USER.service
           ‚îú‚îÄ30422 /usr/bin/python3 /usr/bin/hass
           ‚îî‚îÄ30426 /usr/bin/python3 /usr/bin/hass
[...]</code></pre></figure>
<p>To get Open Peer Power‚Äôs logging output, simple use <code>journalctl</code>.</p>
<figure class="highlight"><pre><code class="language-bash" data-lang="bash">sudo journalctl -f -u open-peer-power@YOUR_USER</code></pre></figure>
<p>Because the log can scroll quite quickly, you can select to view only the error lines:</p>
<figure class="highlight"><pre><code class="language-bash" data-lang="bash">sudo journalctl -f -u open-peer-power@YOUR_USER | grep -i &#39;error&#39;</code></pre></figure>
<p>When working on Open Peer Power, you can easily restart the system and then watch the log output by combining the above commands using <code>&amp;&amp;</code></p>
<figure class="highlight"><pre><code class="language-bash" data-lang="bash">sudo systemctl restart open-peer-power@YOUR_USER &amp;&amp; sudo journalctl -f -u open-peer-power@YOUR_USER</code></pre></figure>
<h3>Automatically restarting Open Peer Power on failure</h3>
<p>If you want to restart the Open Peer Power service automatically after a crash, add the following lines to the <code>[Service]</code> section of your unit file:</p>
<figure class="highlight"><pre><code class="language-text" data-lang="text">Restart=on-failure
RestartSec=5s</code></pre></figure>
:ET