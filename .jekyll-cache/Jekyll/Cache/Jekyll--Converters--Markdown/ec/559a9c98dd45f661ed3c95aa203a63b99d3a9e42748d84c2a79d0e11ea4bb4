I"ú<p>The <code>logger</code> integration lets you define the level of logging activities in Home
Assistant.</p>
<p>To enable the <code>logger</code> integration in your installation,
add the following to your <code>configuration.yaml</code> file:</p>
<figure class="highlight"><pre><code class="language-yaml" data-lang="yaml"># Example configuration.yaml entry
logger:</code></pre></figure>
<p>To log all messages and ignore events lower than critical for specified
components:</p>
<figure class="highlight"><pre><code class="language-yaml" data-lang="yaml"># Example configuration.yaml entry
logger:
  default: info
  logs:
    openpeerpower.components.yamaha: critical
    custom_components.my_integration: critical</code></pre></figure>
<p>To ignore all messages lower than critical and log event for specified
components:</p>
<figure class="highlight"><pre><code class="language-yaml" data-lang="yaml"># Example configuration.yaml entry
logger:
  default: critical
  logs:
    # log level for HA core
    openpeerpower.core: fatal
<pre><code># log level for MQTT integration
openpeerpower.components.mqtt: warning

# log level for all python scripts
openpeerpower.components.python_script: warning

# individual log level for this python script
openpeerpower.components.python_script.my_new_script.py: debug

# log level for SmartThings lights
openpeerpower.components.smartthings.light: info

# log level for a custom component
custom_components.my_integration: debug

# log level for the `aiohttp` Python package
aiohttp: error

# log level for both &amp;#39;glances_api&amp;#39; and &amp;#39;glances&amp;#39; integration
openpeerpower.components.glances: fatal
glances_api: fatal&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</code></pre>
<p>The log entries are in the form<br />
<em>timestamp</em> <em>log-level</em> <em>thread</em> [<strong>namespace</strong>] <em>message</em><br />
where <strong>namespace</strong> is the <em>&lt;component_namespace&gt;</em> currently logging.</p>
<p>In the example, do note the difference between â€˜glances_apiâ€™ and â€˜openpeerpower.components.glancesâ€™ namespaces,
both of which are at root. They are logged by different APIs.</p>
<p>If you want to know the namespaces in your own environment then check your log files on startup.
You will see INFO log messages from openpeerpower.loader stating <code>loaded &lt;component&gt; from &lt;namespace&gt;</code>.
Those are the namespaces available for you to set a <code>log level</code> against.</p>
<h3>Log Levels</h3>
<p>Possible log severity levels, listed in order from most severe to least severe, are:</p>
<ul>
<li>critical</li>
<li>fatal</li>
<li>error</li>
<li>warning</li>
<li>warn</li>
<li>info</li>
<li>debug</li>
<li>notset</li>
</ul>
<h2>Services</h2>
<h3>Service <code>set_default_level</code></h3>
<p>You can alter the default log level (for integrations without a specified log
level) using the service <code>logger.set_default_level</code>.</p>
<p>An example call might look like this:</p>
<figure class="highlight"><pre><code class="language-yaml" data-lang="yaml">service: logger.set_default_level
data:
  level: info</code></pre></figure>
<h3>Service <code>set_level</code></h3>
<p>You can alter log level for one or several integrations using the service
<code>logger.set_level</code>. It accepts the same format as <code>logs</code> in the configuration.</p>
<p>An example call might look like this:</p>
<figure class="highlight"><pre><code class="language-yaml" data-lang="yaml">service: logger.set_level
data:
  openpeerpower.core: fatal
  openpeerpower.components.mqtt: warning
  openpeerpower.components.smartthings.light: info
  custom_components.my_integration: debug
  aiohttp: error</code></pre></figure>
<p>The log information are stored in the
<a href="/docs/configuration/">configuration directory</a> as <code>open-peer-power.log</code>
and you can read it with the command-line tool <code>cat</code> or follow it dynamically
with <code>tail -f</code>.</p>
<p>You can use the example below, when logged in through the <a href="/addons/ssh/">SSH add-on</a>:</p>
<figure class="highlight"><pre><code class="language-bash" data-lang="bash">tail -f /config/open-peer-power.log</code></pre></figure>
<p>On Docker you can use your host command line directly - follow the logs dynamically with:</p>
<figure class="highlight"><pre><code class="language-bash" data-lang="bash"># follow the log dynamically
docker logs --follow  MY_CONTAINER_ID</code></pre></figure>
<p>To see other options use <code>--help</code> instead, or simply leave with no options to display the entire log.</p>
:ET