I"Ä<div class='note warning'>
<p>Synology only provide Python 3.5.1, which is not compatible with Open Peer Power 0.65.0 or later. Until Synology offer an updated version of Python, Open Peer Power 0.64 is the most recent version that will be able to be installed. You can manually specify the version of Open Peer Power to install, for example to install version 0.64.3 you would do <code>./python3 -m pip install openpeerpower==0.64.3</code></p>
</div>
<p>There are 3 alternatives, when using Open Peer Power on Synology NAS:</p>
<ol>
<li>Using Open Peer Power Core on Docker</li>
<li>Directly running Open Peer Power Core on DSM</li>
<li>Using the Open Peer Power a VM (if you have an Intel based Synology)</li>
</ol>
<p>Option 1 is described on the <a href="/docs/installation/docker/">Docker installation page</a>.</p>
<p>Option 3 uses the Synology Based Virtual Machine Manager. You can import the VDI image to be found at the <a href="/hassio/installation/">Open Peer Power installation page</a>. Download the image and add it to the image store. The go to ‚ÄúVirtual Machine‚Äù in the interface and create a new VM with the image you just added.</p>
<p>The main benefit from this method is that you can assign Open Peer Power its own IP number, so there is no risk regarding TCP/UDP port conflicts. USB dongles an be connected to the VM without the need to install a driver in DSM.</p>
<p>Option 2 is described below.</p>
<p>The following configuration has been tested on Synology 413j running DSM 6.0-7321 Update 1.</p>
<p>Running these commands will:</p>
<ul>
<li>Install Open Peer Power</li>
<li>Enable Open Peer Power to be launched on <code>http://localhost:8123</code></li>
</ul>
<p>Using the Synology webadmin:</p>
<ul>
<li>Install python3 using the Synology Package Center</li>
<li>Create a <code>openpeerpower</code> user and add to the ‚Äúusers‚Äù group</li>
</ul>
<p>SSH onto your Synology &amp; login as admin or root</p>
<ul>
<li>Log in with your own administrator account</li>
<li>Switch to root using:</li>
</ul>
<figure class="highlight"><pre><code class="language-bash" data-lang="bash">$ sudo -i</code></pre></figure>
<p>Check the path to python3 (assumed to be /volume1/@appstore/py3k/usr/local/bin)</p>
<figure class="highlight"><pre><code class="language-bash" data-lang="bash"># cd /volume1/@appstore/py3k/usr/local/bin</code></pre></figure>
<p>Install PIP (Python‚Äôs package management system)</p>
<figure class="highlight"><pre><code class="language-bash" data-lang="bash"># ./python3 -m ensurepip</code></pre></figure>
<p>Use PIP to install the Open Peer Power package 0.64.3</p>
<figure class="highlight"><pre><code class="language-bash" data-lang="bash"># ./python3 -m pip install openpeerpower==0.64.3</code></pre></figure>
<p>Create a Open Peer Power configuration directory &amp; switch to it</p>
<figure class="highlight"><pre><code class="language-bash" data-lang="bash"># mkdir /volume1/openpeerpower
# chown openpeerpower /volume1/openpeerpower 
# chmod 755 /volume1/openpeerpower
# cd /volume1/openpeerpower</code></pre></figure>
<p>Hint: alternatively you can also create a ‚ÄúShared Folder‚Äù via Synology WebUI (e.g., via ‚ÄúFile Station‚Äù) - this has the advantage that the folder is visible via ‚ÄúFile Station‚Äù.</p>
<p>Create hass-daemon file using the following code (edit the variables in uppercase if necessary)</p>
<figure class="highlight"><pre><code class="language-bash" data-lang="bash">#!/bin/sh
<h1>Package</h1>
<p>PACKAGE=&quot;openpeerpower&quot;
DNAME=&quot;Open Peer Power&quot;</p>
<h1>Others</h1>
<p>USER=&quot;openpeerpower&quot;
PYTHON_DIR=&quot;/volume1/@appstore/py3k/usr/local/bin&quot;
PYTHON=&quot;$PYTHON_DIR/python3&quot;
HASS=&quot;$PYTHON_DIR/hass&quot;
INSTALL_DIR=&quot;/volume1/openpeerpower&quot;
PID_FILE=&quot;$INSTALL_DIR/open-peer-power.pid&quot;
FLAGS=&quot;-v ‚Äìconfig $INSTALL_DIR ‚Äìpid-file $PID_FILE ‚Äìdaemon&quot;
REDIRECT=&quot;&gt; $INSTALL_DIR/open-peer-power.log 2&gt;&amp;1&quot;</p>
<p>start_daemon ()
{
sudo -u ${USER} /bin/sh -c &quot;$PYTHON $HASS $FLAGS $REDIRECT;&quot;
}</p>
<p>stop_daemon ()
{
kill <code>cat ${PID_FILE}</code>
wait_for_status 1 20 || kill -9 <code>cat ${PID_FILE}</code>
rm -f ${PID_FILE}
}</p>
<p>daemon_status ()
{
if [ -f ${PID_FILE} ] &amp;&amp; kill -0 <code>cat ${PID_FILE}</code> &gt; /dev/null 2&gt;&amp;1; then
return
fi
rm -f ${PID_FILE}
return 1
}</p>
<p>wait_for_status ()
{
counter=$2
while [ ${counter} -gt 0 ]; do
daemon_status
[ $? -eq $1 ] &amp;&amp; return
let counter=counter-1
sleep 1
done
return 1
}</p>
<p>case $1 in
start)
if daemon_status; then
echo ${DNAME} is already running
exit 0
else
echo Starting ${DNAME} ‚Ä¶
start_daemon
exit $?
fi
;;
stop)
if daemon_status; then
echo Stopping ${DNAME} ‚Ä¶
stop_daemon
exit $?
else
echo ${DNAME} is not running
exit 0
fi
;;
restart)
if daemon_status; then
echo Stopping ${DNAME} ‚Ä¶
stop_daemon
echo Starting ${DNAME} ‚Ä¶
start_daemon
exit $?
else
echo ${DNAME} is not running
echo Starting ${DNAME} ‚Ä¶
start_daemon
exit $?
fi
;;
status)
if daemon_status; then
echo ${DNAME} is running
exit 0
else
echo ${DNAME} is not running
exit 1
fi
;;
log)
echo ${LOG_FILE}
exit 0
;;
*)
exit 1
;;
esac</code></pre></figure></p>
<p>Create links to Python folders to make things easier in the future:</p>
<figure class="highlight"><pre><code class="language-bash" data-lang="bash"># ln -s /volume1/@appstore/py3k/usr/local/bin/python3 python3
# ln -s /volume1/@appstore/py3k/usr/local/lib/python3.5/site-packages/openpeerpower openpeerpower</code></pre></figure>
<p>Set the owner and permissions on your configuration folder</p>
<figure class="highlight"><pre><code class="language-bash" data-lang="bash"># chown -R openpeerpower:users /volume1/openpeerpower
# chmod -R 664 /volume1/openpeerpower</code></pre></figure>
<p>Make the daemon file executable:</p>
<figure class="highlight"><pre><code class="language-bash" data-lang="bash"># chmod 755 /volume1/openpeerpower/hass-daemon</code></pre></figure>
<p>Update your firewall (if it is turned on the Synology device):</p>
<ul>
<li>Go to your Synology control panel</li>
<li>Go to security</li>
<li>Go to firewall</li>
<li>Go to Edit Rules</li>
<li>Click Create</li>
<li>Select Custom: Destination port ‚ÄúTCP‚Äù</li>
<li>Type ‚Äú8123‚Äù in port</li>
<li>Click on OK</li>
<li>Click on OK again</li>
</ul>
<p>Copy your <code>configuration.yaml</code> file into the configuration folder
That‚Äôs it‚Ä¶ you‚Äôre all set to go</p>
<p>Here are some useful commands:</p>
<ul>
<li>Start Open Peer Power:</li>
</ul>
<figure class="highlight"><pre><code class="language-bash" data-lang="bash">$ sudo /volume1/openpeerpower/hass-daemon start</code></pre></figure>
<ul>
<li>Stop Open Peer Power:</li>
</ul>
<figure class="highlight"><pre><code class="language-bash" data-lang="bash">$ sudo /volume1/openpeerpower/hass-daemon stop</code></pre></figure>
<ul>
<li>Restart Open Peer Power:</li>
</ul>
<figure class="highlight"><pre><code class="language-bash" data-lang="bash">$ sudo /volume1/openpeerpower/hass-daemon restart</code></pre></figure>
<ul>
<li>Upgrade Open Peer Power::</li>
</ul>
<figure class="highlight"><pre><code class="language-bash" data-lang="bash">$  /volume1/@appstore/py3k/usr/local/bin/python3 -m pip install --upgrade openpeerpower</code></pre></figure>
:ET