I"ê
<p>The <code>updater</code> binary sensor will check daily for new releases. The state will be ‚Äúon‚Äù when an update is available. Otherwise, the state will be ‚Äúoff‚Äù. The newer version, as well as the link to the release notes, are attributes of the updater.</p>
<p>The updater integration will also collect basic information about the running Open Peer Power instance and its environment. The information includes the current Open Peer Power version, the time zone, Python version and operating system information. No identifiable information (i.e., IP address, GPS coordinates, etc.) will ever be collected. If you are concerned about your privacy, you are welcome to scrutinize the Python <a href="https://github.com/OpenPeerPower/Open-Peer-Power/tree/dev/openpeerpower/components/updater">source code</a>.</p>
<h2>Configuration</h2>
<p>This integration is by default enabled, unless you‚Äôve disabled or removed the <a href="https://www.openpeerpower.io/integrations/default_config/"><code>default_config:</code></a> line from your configuration. If that is the case, the following example shows you how to enable this integration manually:</p>
<figure class="highlight"><pre><code class="language-yaml" data-lang="yaml">updater:</code></pre></figure>
<p>For further information about the Updater‚Äôs data, please check the <a href="/docs/backend/updater/">detailed overview</a>. If you choose not to share any information when checking for updates, you can set <code>reporting: false</code>.</p>
<p>It is possible to report the integrations that you are using to the Open Peer Power developers. This will help them focus on improving the popular ones. To enable this option, you have to add <code>include_used_components: true</code>.</p>
<figure class="highlight"><pre><code class="language-json" data-lang="json">&quot;components&quot;: [
    &quot;apcupsd&quot;,
    &quot;api&quot;,
    &quot;automation&quot;,
    &quot;binary_sensor&quot;,
    &quot;binary_sensor.zwave&quot;,
    &quot;camera&quot;,
    &quot;camera.uvc&quot;,
    &quot;config&quot;,
    &quot;config.core&quot;,
    ...
]</code></pre></figure>
<h2>Notification</h2>
<p>For an added bonus, an automation integration can be created to send a message with a notifier when that state of this component‚Äôs entity changes.</p>
<p>{% highlight yaml %}</p>
<h1>Example configuration.yaml entry</h1>
<p>automation:
alias: Update Available Notification
trigger:
- platform: state
entity_id: binary_sensor.updater
from: ‚Äòoff‚Äô
to: ‚Äòon‚Äô
action:
- service: notify.notify
data_template:
message: ‚ÄúOpen Peer Power {{ state_attr(‚Äòbinary_sensor.updater‚Äô, ‚Äònewest_version‚Äô) }} is available.‚Äù
{% endhighlight %}</p>
:ET