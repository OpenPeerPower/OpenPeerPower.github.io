I"<p>The <code>persistent_notification</code> integration can be used to show a notification on the frontend that has to be dismissed by the user.</p>
<p class='img'>
  <img src='/images/screenshots/persistent-notification.png' />
</p>
<h3>Service</h3>
<p>The service <code>persistent_notification.create</code> takes in <code>message</code>, <code>title</code>, and <code>notification_id</code>.</p>
<table>
<thead>
<tr>
<th>Service data attribute</th>
<th>Optional</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>message</code></td>
<td>no</td>
<td>Body of the notification. Accepts <a href="/topics/templating/">templates</a>.</td>
</tr>
<tr>
<td><code>title</code></td>
<td>yes</td>
<td>Title of the notification. Accepts <a href="/topics/templating/">templates</a>.</td>
</tr>
<tr>
<td><code>notification_id</code></td>
<td>yes</td>
<td>If <code>notification_id</code> is given, it will overwrite the notification if there already was a notification with that ID.</td>
</tr>
</tbody>
</table>
<p>Here is how an <a href="/getting-started/automation-action/">action</a> of your <a href="/getting-started/automation/">automation setup</a> with static content could look like.</p>
<figure class="highlight"><pre><code class="language-yaml" data-lang="yaml">action:
  service: persistent_notification.create
  data:
    message: &quot;Your message goes here&quot;
    title: &quot;Custom subject&quot;</code></pre></figure>
<p>If you want to show some runtime information, you have to use [templates](/topics/templating/ inside <code>data_template</code>.</p>
<p>{% highlight yaml %}
action:
service: persistent_notification.create
data_template:
title: &gt;
Thermostat is {{ state_attr(‘climate.thermostat’, ‘hvac_action’) }}
message: “Temperature {{ state_attr(‘climate.thermostat’, ‘current_temperature’) }}”
{% endhighlight %}</p>
<p>The service <code>persistent_notification.dismiss</code> requires a <code>notification_id</code>.</p>
<table>
<thead>
<tr>
<th>Service data attribute</th>
<th>Optional</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>notification_id</code></td>
<td>no</td>
<td>the <code>notification_id</code> is required to identify the notification that should be removed.</td>
</tr>
</tbody>
</table>
<p>This service allows you to remove a notifications by script or automation.</p>
<figure class="highlight"><pre><code class="language-yaml" data-lang="yaml">action:
  service: persistent_notification.dismiss
  data:
    notification_id: &quot;1234&quot;</code></pre></figure>
<p>This automation example shows a notification when the Z-Wave network is starting and removes it when the network is ready.</p>
<figure class="highlight"><pre><code class="language-yaml" data-lang="yaml">- alias: &#39;Z-Wave network is starting&#39;
  trigger:
    - platform: event
      event_type: zwave.network_start
  action:
    - service: persistent_notification.create
      data:
        title: &quot;Z-Wave&quot;
        message: &quot;Z-Wave network is starting...&quot;
        notification_id: zwave
<ul>
<li>alias: 'Z-Wave network is ready'
trigger:
<ul>
<li>platform: event
event_type: zwave.network_ready
action:</li>
<li>service: persistent_notification.dismiss
data:
notification_id: zwave</code></pre></figure></li>
</ul>
</li>
</ul>
<h3>Markdown support</h3>
<p>The message attribute supports the <a href="https://daringfireball.net/projects/markdown/syntax">Markdown formatting syntax</a>. Some examples are:</p>
<table>
<thead>
<tr>
<th>Type</th>
<th>Message</th>
</tr>
</thead>
<tbody>
<tr>
<td>Headline 1</td>
<td><code># Headline</code></td>
</tr>
<tr>
<td>Headline 2</td>
<td><code>## Headline</code></td>
</tr>
<tr>
<td>Newline</td>
<td><code>\n</code></td>
</tr>
<tr>
<td>Bold</td>
<td><code>**My bold text**</code></td>
</tr>
<tr>
<td>Cursive</td>
<td><code>*My cursive text*</code></td>
</tr>
<tr>
<td>Link</td>
<td><code>[Link](https://openpeerpower.io/)</code></td>
</tr>
<tr>
<td>Image</td>
<td><code>![image](/local/my_image.jpg)</code></td>
</tr>
</tbody>
</table>
<div class="note">
<p><code>/local/</code> in this context refers to the <code>.openpeerpower/www/</code> folder.</p>
</div>
<h3>Create a persistent notification</h3>
<p>Choose the <strong>Services</strong> tab from the <strong>Developer Tools</strong> sidebar item, then select the <code>persistent_notification.create</code> service from the “Service” dropdown. Enter something like the sample below into the <strong>Service Data</strong> field and press the <strong>CALL SERVICE</strong> button.</p>
<figure class="highlight"><pre><code class="language-json" data-lang="json">{
  &quot;notification_id&quot;: &quot;1234&quot;,
  &quot;title&quot;: &quot;Sample notification&quot;,
  &quot;message&quot;: &quot;This is a sample text&quot;
}</code></pre></figure>
<p>This will create the notification entry shown above.</p>
:ET