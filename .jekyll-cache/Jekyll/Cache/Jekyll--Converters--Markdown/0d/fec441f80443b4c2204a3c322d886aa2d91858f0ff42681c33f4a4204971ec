I"˛<p>The <code>otp</code> sensor generates One-Time Passwords according to <a href="https://tools.ietf.org/html/rfc6238">RFC6238</a> that is compatible with most OTP generators available, including Google Authenticator. You can use this when building custom security solutions and want to use ‚Äúrolling codes‚Äù, that change every 30 seconds.</p>
<h2>Configuration</h2>
<p>To enable the OTP sensor, add the following lines to your <code>configuration.yaml</code>:</p>
<figure class="highlight"><pre><code class="language-yaml" data-lang="yaml"># Example configuration.yaml entry
sensor:
  - platform: otp
    token: SHARED_SECRET_TOKEN</code></pre></figure>
<h2>Generating a token</h2>
<p>A simple way to generate a <code>token</code> for a new sensor is to run this snippet of Python code in your Open Peer Power virtual environment:</p>
<figure class="highlight"><pre><code class="language-shell" data-lang="shell">$ pip3 install pyotp
$ python3 -c &#39;import pyotp; print(&quot;Token:&quot;, pyotp.random_base32())&#39;
Token: IHEDPEBEVA2WVHB7</code></pre></figure>
<p>To run in a Docker container:</p>
<figure class="highlight"><pre><code class="language-shell" data-lang="shell">$ docker exec -it open-peer-power python -c &#39;import pyotp; print(&quot;Token:&quot;, pyotp.random_base32())&#39;
Token: IHEDPEBEVA2WVHB7</code></pre></figure>
<p>Copy and paste the token into your Open Peer Power configuration and add it to your OTP generator. Verify that they generate the same code.</p>
<div class='note warning'>
It is vital that your system clock is correct both on your Open Peer Power server and on your OTP generator device (e.g., your phone). If not, the generated codes will not match! Make sure NTP is running and syncing your time correctly before creating an issue.
</div>
:ET